<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="orders-details-prc-api-test-suite.xml" />
	<munit:test name="orders-details-prc-api-test-suite-ConsumeFromActiveMQFlowTest" doc:id="878ccd9a-e2a2-4edc-b4e7-d33357c05ce5" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="b47e74c0-0da0-4d77-b6db-03e59aec6800" processor="wsc:consume">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Consume" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="9980cafd-bab2-4a52-a149-8242bb21c774" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when" doc:id="e14a18b1-b0b6-4bfc-a10b-f409412ee205" processor="wsc:consume">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Consume" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="61b68e36-4631-48f5-b1fd-992aed5dbc5f" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when" doc:id="9f6ea4de-6b41-486d-97f2-0f7fc6a07d97" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Fetch Order Details" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="55d9d87d-4229-4682-bd26-4c7a0629b3ce" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json&#10;---&#10;readUrl('classpath://munitTestFiles/db-array-response.json','application/json')]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when" doc:id="56fbe133-de3c-4de8-ad08-2f2f03745fc7" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Insert Requester" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="d531f788-6dc4-40af-8444-2fce56818ffa" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="5d4765a2-5536-4c84-b49e-f144b3c6ed12" >
				<munit:payload value="#[output application/json&#10;---&#10;readUrl('classpath://munitTestFiles/jms-object-insert-response.json','application/json')]" />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to ConsumeFromActiveMQFlow" doc:id="024dd654-f994-46da-9260-b0a202feda1b" name="ConsumeFromActiveMQFlow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="8f87150c-6400-4a69-9d12-ed8d2fb8528c" actual="#[payload]" expected='#[{&#10;	"status" : "success",&#10;	"message" : "The API successfully consumes order data from ActiveMQ",&#10;    "description": "Data is processed according to the mapping rules and stored in the target fields."&#10;}]'/>
		</munit:validation>
	</munit:test>
	<munit:test name="orders-details-prc-api-test-suite-ConsumeFromActiveMQFlowTest1" doc:id="0a4cc392-9eeb-4dfc-986f-2ea9c2c321a7" description="Test" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="a5b6a109-cf81-495d-8a0c-321ccc37d514" processor="wsc:consume" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Consume" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="9980cafd-bab2-4a52-a149-8242bb21c774" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when1" doc:id="260ca4c9-99ba-4ce6-8f1d-97bf3c305951" processor="sub-flow" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="num-to-wordSub_Flow" attributeName="name" />
					<munit-tools:with-attribute whereValue="e025caa7-274f-471d-b3fe-7c533eba5edc" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value='#["three thousand"]' />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when2" doc:id="a0d1054e-b44b-48f7-ac9e-9a98b617eb1c" processor="http:request" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Fetch Order Details" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="55d9d87d-4229-4682-bd26-4c7a0629b3ce" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json&#10;---&#10;readUrl('classpath://munitTestFiles/db-array-update-response.json','application/json')]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when3" doc:id="5ce014fc-87e4-406a-a72c-038f63a48067" processor="http:request" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Update Requester" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="d1a0d0eb-1811-45ec-8944-c3f468e0bad8" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="62c6f6ab-3708-42a3-b232-43cc803d2753" >
				<munit:payload value="#[output application/json&#10;---&#10;readUrl('classpath://munitTestFiles/jms-object-update-response.json','application/json')]" />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to ConsumeFromActiveMQFlow" doc:id="96b82c8c-b0ac-4dbf-ac3c-3388b7600bc4" name="ConsumeFromActiveMQFlow" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-equals doc:name="Assert equals" doc:id="42fc633b-1afe-4c44-9685-90b78df66680" actual="#[payload]" expected='#[{&#10;	"status" : "success",&#10;	"message" : "The API successfully consumes order data from ActiveMQ",&#10;    "description": "Data is processed according to the mapping rules and stored in the target fields."&#10;}]' />
		</munit:validation>
	</munit:test>
	<munit:test name="orders-details-prc-api-test-suite-ConsumeFromActiveMQFlow-payload-defaultCase" doc:id="81d87ca4-0000-4c2c-9054-f784171d637e" description="Test">
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="de0887ac-e0de-4f1b-a755-8f973fb607c8" >
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to ConsumeFromActiveMQFlow" doc:id="35faa4a4-ae94-4971-8a10-bb084791debf" name="ConsumeFromActiveMQFlow" />
		</munit:execution>
		<munit:validation>
			<munit-tools:assert-that doc:name="Assert that" doc:id="f8a04a77-0368-476d-b93b-9b04445019c5" expression="#[payload]" is="#[MunitTools::notNullValue()]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="orders-details-prc-api-test-suite-ConsumeFromActiveMQFlowTest-for-ArrayInsert" doc:id="4db05fc2-226f-4841-af96-8d964c9793f6" description="Test" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="91279d60-2213-490b-b149-39350757a280" processor="wsc:consume" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Consume" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="9980cafd-bab2-4a52-a149-8242bb21c774" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when1" doc:id="f1b317e5-4ea1-4f40-b077-f2e3f9b6b96e" processor="wsc:consume" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Consume" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="61b68e36-4631-48f5-b1fd-992aed5dbc5f" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when2" doc:id="7029a07b-f575-4dd1-a203-8fa6023b388d" processor="http:request" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Fetch Order Details" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="55d9d87d-4229-4682-bd26-4c7a0629b3ce" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json&#10;---&#10;readUrl('classpath://munitTestFiles/db-array-response.json','application/json')]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when3" doc:id="d5ef0d6a-6966-4edb-9873-6140b436bde6" processor="http:request">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="Insert Requester" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="d531f788-6dc4-40af-8444-2fce56818ffa" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="0d8a5ed4-ac6a-4309-96e8-e5b4466a55ea" >
				<munit:payload value="#[output application/json&#10;---&#10;readUrl('classpath://munitTestFiles/jms-array-response-insertPayload.json','application/json')]" mediaType="application/json" />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to ConsumeFromActiveMQFlow" doc:id="a2ea4976-270e-48ae-8ade-55df8c1695bb" name="ConsumeFromActiveMQFlow" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="dcd3409d-c6d5-4def-afbc-8cc6aa0feb0f" expression="#[payload]" is="#[MunitTools::notNullValue()]"/>
		</munit:validation>
	</munit:test>
	<munit:test name="orders-details-prc-api-test-suite-ConsumeFromActiveMQFlowTest-for-ArrayUpdate" doc:id="adb2bfe9-56ee-4196-8b62-559bafd1a439" description="Test" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="b5a09e88-bdc6-4795-8d28-95d44b484711" processor="wsc:consume" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Consume" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="9980cafd-bab2-4a52-a149-8242bb21c774" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when2" doc:id="81d58138-f963-4579-bb32-7e4e2d108e50" processor="http:request" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Fetch Order Details" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="55d9d87d-4229-4682-bd26-4c7a0629b3ce" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json&#10;---&#10;readUrl('classpath://munitTestFiles/db-array-response.json','application/json')]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when1" doc:id="2be2508d-4ec0-4514-9963-4b735d922657" processor="wsc:consume">
				<munit-tools:with-attributes>
					<munit-tools:with-attribute whereValue="Consume" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="61b68e36-4631-48f5-b1fd-992aed5dbc5f" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="Mock when3" doc:id="a4b3edb4-0f7b-41fa-acae-f612a09133cd" processor="http:request" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Update Requester" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="d1a0d0eb-1811-45ec-8944-c3f468e0bad8" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="66819d3c-df01-492c-ba04-ad3f59d7767b" >
				<munit:payload value="#[output application/json&#10;---&#10;readUrl('classpath://munitTestFiles/jms-array-response-updatePayload.json','application/json')]" />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to ConsumeFromActiveMQFlow" doc:id="e511c45a-6f4b-4e6e-a4b9-84e0afddfecf" name="ConsumeFromActiveMQFlow" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="35a87a6e-7d80-4586-a6f8-1a646abc7210" expression="#[payload]" is="#[MunitTools::notNullValue()]" />
		</munit:validation>
	</munit:test>
	<munit:test name="orders-details-prc-api-test-suite-InvalidISOCode" doc:id="447e23e4-f0b9-4078-880c-fc680df82f7b" description="Test" >
		<munit:behavior >
			<!-- [STUDIO:"sSISOCode soap call"]<munit-tools:mock-when doc:name="sSISOCode soap call" doc:id="3421acff-1295-4541-92c3-81ce1eaaeaa4" processor="wsc:consume" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Consume" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="9980cafd-bab2-4a52-a149-8242bb21c774" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java&#10;&#45;&#45;-&#10;readUrl('classpath://munitTestFiles/countryCurrencyPayload.dwl','application/java')&#93;" mediaType="application/java" encoding="UTF-8" />
				</munit-tools:then-return>
			</munit-tools:mock-when> [STUDIO] -->
			<munit-tools:mock-when doc:name="fetch-sISOCode" doc:id="8486053e-8e39-40c2-9e5b-b21e76f066ea" processor="flow-ref">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="fetch-sISOCode" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="7367ae81-e124-45b2-b3e9-b0932a180a63" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/java&#10;---&#10;readUrl('classpath://munitTestFiles/ISOCodeInvalidConsumeRespPayload.json','application/java')]" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit-tools:mock-when doc:name="numToWordPriceNull" doc:id="7fc8db39-ccaf-453c-9a9a-71ad8c8556e1" processor="wsc:consume" >
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="Consume" attributeName="doc:name" />
					<munit-tools:with-attribute whereValue="61b68e36-4631-48f5-b1fd-992aed5dbc5f" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="63de62fc-e523-415d-8416-6c0aa3770824" >
				<munit:payload value="#[output application/json&#10;---&#10;readUrl('classpath://munitTestFiles/invalidISOCodePayload.json','application/json')]" encoding="UTF-8" mediaType="application/json" />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to ConsumeFromActiveMQFlow" doc:id="39518853-c4ee-422a-b9aa-98470b837593" name="ConsumeFromActiveMQFlow" />
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="80e2862a-c02d-4c0f-92e0-4dae9feb70dc" is="#[MunitTools::notNullValue()]" expression="#[payload]"/>
		</munit:validation>
	</munit:test>


</mule>
